<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://dengqinghua.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dengqinghua.github.io/" rel="alternate" type="text/html" /><updated>2021-02-04T00:32:18+08:00</updated><id>https://dengqinghua.github.io/feed.xml</id><title type="html">Dengqinghua.42</title><subtitle>Everything I think
</subtitle><author><name>dengqinghua</name></author><entry><title type="html">boom-chick 风格笔记</title><link href="https://dengqinghua.github.io/finger-style-basics.html" rel="alternate" type="text/html" title="boom-chick 风格笔记" /><published>2021-01-31T00:00:00+08:00</published><updated>2021-01-31T00:00:00+08:00</updated><id>https://dengqinghua.github.io/finger-style-basics</id><content type="html" xml:base="https://dengqinghua.github.io/finger-style-basics.html">&lt;hr data-content=&quot; Part1 &quot; /&gt;

&lt;p&gt;该部分主要是需要训练 &lt;strong&gt;右手大拇指 和 右手其他指头 的独立性&lt;/strong&gt; (AKA: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thumb Independent&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/thumb-independent.png&quot; alt=&quot;images/thumb-independent.png&quot; height=&quot;150px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意大拇指需要放松, 有一种跳跃的感觉为佳&lt;/p&gt;

&lt;h3 id=&quot;练习1&quot;&gt;练习1&lt;/h3&gt;

&lt;p&gt;分别在 1,2,3,4 拍去弹奏&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/thumb-chick-example-1.png&quot; alt=&quot;assets/images/thumb-chick-example-1.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;练习2&quot;&gt;练习2&lt;/h3&gt;

&lt;p&gt;分别在 1and,2and,3and,4and 去弹奏&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/thumb-chick-example-2.png&quot; alt=&quot;assets/images/thumb-chick-example-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;该部分的练习比较难的是怎么4弦的闷音的同时, 让3弦奏响&lt;/p&gt;

&lt;h3 id=&quot;练习3&quot;&gt;练习3&lt;/h3&gt;

&lt;p&gt;音阶走一个! 分别用 2分, 4分 和 8分 来弹奏 G 调音阶&lt;/p&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">万域达全链路系统V1.0</title><link href="https://dengqinghua.github.io/wyd-flow.html" rel="alternate" type="text/html" title="万域达全链路系统V1.0" /><published>2021-01-24T00:00:00+08:00</published><updated>2021-01-24T00:00:00+08:00</updated><id>https://dengqinghua.github.io/wyd-flow</id><content type="html" xml:base="https://dengqinghua.github.io/wyd-flow.html">&lt;hr data-content=&quot; 流程 &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    subgraph 回款
    计算用户额外成本--&amp;gt;用户回款
    end
    subgraph 供应商
    供应商订单确认--&amp;gt;边境,站台等订单确认--&amp;gt;供应商运输货物
    end
    subgraph 接收客户需求
    客户需求输出:成本,目的地和运输物品--&amp;gt;销售提供运输方案,报价
    end
&lt;/div&gt;

&lt;hr data-content=&quot; 万域达全链路系统V1.0 &quot; /&gt;

&lt;p&gt;1.0版本的需求集中在需求环节&lt;/p&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    客户需求输出:成本,目的地和运输物品--&amp;gt;销售提供运输方案
&lt;/div&gt;

&lt;p&gt;V1.0需要做的核心的一点是:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;系统可对销售提出指导性的建议, 可以在客户提出需求后, 搜索最优的供应商链路&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;基于该目的，V1.0 的系统产出包括:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;智能化的供应商数据收集&lt;/p&gt;

    &lt;p&gt;a. 对供应商数据进行建模, 周期性地进行数据收集, 减少销售录入信息的情况&lt;/p&gt;

    &lt;p&gt;b. 客户信息和订单信息收集, 包括目的地, 额外成本信息等&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;供应商推荐&lt;/p&gt;

    &lt;p&gt;a. 根据客户的目的地信息, 推荐可选择的供应商(精确到国家)&lt;/p&gt;

    &lt;p&gt;b. 根据用户的历史记录等, 提示销售改用户的消费水平, 信用度信息&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 工作量评估:2人, 每人11天 交付时间: 2月22日 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;系统搭建(1天)
    &lt;ul&gt;
      &lt;li&gt;项目初始化, 框架搭建&lt;/li&gt;
      &lt;li&gt;环境部署和上线&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;供应商管理(4天)
    &lt;ul&gt;
      &lt;li&gt;新增/编辑供应商信息&lt;/li&gt;
      &lt;li&gt;供应商的数据自动收集&lt;/li&gt;
      &lt;li&gt;供应商信息展示&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;供应商推荐(3天)
    &lt;ul&gt;
      &lt;li&gt;供应商推荐页面&lt;/li&gt;
      &lt;li&gt;供应商推荐算法&lt;/li&gt;
      &lt;li&gt;算法调优和权重设计&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;其他(3天)
    &lt;ul&gt;
      &lt;li&gt;登录, 账号管理等功能&lt;/li&gt;
      &lt;li&gt;原有系统中的数据(客户, 供应商)迁移&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 页面原型 &quot; /&gt;

&lt;h2 id=&quot;供应商&quot;&gt;供应商&lt;/h2&gt;

&lt;p&gt;该部分包括 &lt;strong&gt;自动录入, 销售录入 和 供应商录入&lt;/strong&gt; 三部分&lt;/p&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR
    B(供应商数据)
    B --&amp;gt;|自动录入| D[抓取供应商提供的价格,目的地信息]
    B --&amp;gt;|自动录入| E[定期发送邮件,提供录入信息的链接地址]
    B --&amp;gt;|销售录入| F[后台录入]
    B --&amp;gt;|供应商录入| G[销售发送链接给供应商,供应商进行录入]
&lt;/div&gt;

&lt;p&gt;下图为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;后台录入&lt;/code&gt; 的示例&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/供应商录入.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;无论是那种形式的录入，最终都会规整到后台页面中&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/供应商列表.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;推荐系统&quot;&gt;推荐系统&lt;/h2&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR
    B(推荐维度)
    B --&amp;gt;|目的地| D[计算目的地和供应商的关系]--&amp;gt;提供最优的供应商方案
    B --&amp;gt;|价格| E[计算在价格范围内的价格最低的供应商]--&amp;gt;提供最优的供应商方案
    B --&amp;gt;|客户| F[提示客户的历史信息, 并给出客户的特征画像]--&amp;gt;提供最优的供应商方案
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/供应商推荐.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>dengqinghua</name></author><category term="wwork" /><summary type="html"></summary></entry><entry><title type="html">寂寞的季节</title><link href="https://dengqinghua.github.io/lonely-seasons.html" rel="alternate" type="text/html" title="寂寞的季节" /><published>2021-01-24T00:00:00+08:00</published><updated>2021-01-24T00:00:00+08:00</updated><id>https://dengqinghua.github.io/lonely-seasons</id><content type="html" xml:base="https://dengqinghua.github.io/lonely-seasons.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;assets/js/pdf.js/web/viewer.html?file=/assets/doc/寂寞的季节.pdf&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;assets/doc/寂寞的季节.gp&quot;&gt;GuitarPro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.bilibili.com/video/BV1Mx411m74N&quot;&gt;陶喆 《寂寞的季节》指弹 吉他 Solo 独奏【蓝色六弦】独家编曲&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹: &lt;a href=&quot;https://www.bilibili.com/video/BV1TN411o7Qu&quot;&gt;吉他指弹 寂寞的季节&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 难点 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;注意时延和音的干净程度&lt;/li&gt;
  &lt;li&gt;注意手指的安排和对应的延音的关系&lt;/li&gt;
  &lt;li&gt;高把位的延音和保留指&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 需要加强的 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;高把位部分的处理(注意手腕的角度, 食指需要尽量和指板平行)&lt;/li&gt;
  &lt;li&gt;换把位一定要多练习，才能在真正录音的时候节奏保持稳定(现在还是有一些不太稳)&lt;/li&gt;
  &lt;li&gt;弦是不是该换了?(总是感觉音不准的样子)&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 做的不错的 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;觉得自己比较满意, 情感上面表达的还可以(至少感动了自己…)&lt;/li&gt;
  &lt;li&gt;录音的效率比较高, 半小时录出来了&lt;/li&gt;
  &lt;li&gt;在扒谱之后, 立刻对手型, 轻重和难点进行了标注, 确认了各个部分的手型安排和处理, 这一点挺不错&lt;/li&gt;
  &lt;li&gt;演奏和练习的时候手指都比较放松&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 下次录音我会尝试的 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;一定还是要反复调弦, 尤其是对于使用变调夹的情况(调节到听着比较舒服为止)&lt;/li&gt;
  &lt;li&gt;反复听一下原曲的感觉, 在比较难的部分的时候, 需要先着重练习, 而不是去反复弹奏自己已经会的部分&lt;/li&gt;
&lt;/ol&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">伍伍慧未名曲</title><link href="https://dengqinghua.github.io/55h-of-unknow-piece.html" rel="alternate" type="text/html" title="伍伍慧未名曲" /><published>2021-01-21T00:00:00+08:00</published><updated>2021-01-21T00:00:00+08:00</updated><id>https://dengqinghua.github.io/55h_of_unknow_piece</id><content type="html" xml:base="https://dengqinghua.github.io/55h-of-unknow-piece.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;assets/js/pdf.js/web/viewer.html?file=/assets/doc/Unknown-of-55h.pdf&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;assets/doc/Unknown-of-55h.gp&quot;&gt;GuitarPro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.instagram.com/p/CKES124lhIr/?utm_source=ig_web_copy_link&quot;&gt;Okay next let’s give this new tune a title&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹: &lt;a href=&quot;https://www.bilibili.com/video/bv1Mv4y1f7Sf&quot;&gt;指弹吉他 伍伍慧未名曲&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 难点 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;该曲子为散拍的形式, 无法记录很完整的曲谱&lt;/li&gt;
  &lt;li&gt;无法跟着节拍器&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 需要加强的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;弹得还是不够干净，有一些呲音&lt;/li&gt;
  &lt;li&gt;弹奏古典琴时候的坐姿不对, 导致前面的录音没法放松&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 做的不错的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;选择曲子的难度适中, 录音的成功率挺高的&lt;/li&gt;
  &lt;li&gt;录音的整个过程(调整坐姿之后)比较放松, 不会强求一次成功&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 下次录音我会尝试的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;不要放过每一个细节, 争取做到没有呲音且流畅&lt;/li&gt;
  &lt;li&gt;最近觉得弹奏的曲子挺多的, 是不是应该尝试一下沉淀什么&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">contry blues lick</title><link href="https://dengqinghua.github.io/contry-blues-lick.html" rel="alternate" type="text/html" title="contry blues lick" /><published>2021-01-10T00:00:00+08:00</published><updated>2021-01-10T00:00:00+08:00</updated><id>https://dengqinghua.github.io/contry-blues-lick</id><content type="html" xml:base="https://dengqinghua.github.io/contry-blues-lick.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;assets/js/pdf.js/web/viewer.html?file=/assets/doc/Blues Trick PG.pdf&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;assets/doc/Blues Trick PG.gp&quot;&gt;GuitarPro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.proguitar.com/academy/lessons/one-minute-lessons/country-blues-riff-in-a&quot;&gt;Country Blues Riff in A ProGuitar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹: &lt;a href=&quot;https://www.bilibili.com/video/bv1CT4y1N7Ay&quot;&gt;blues contry lick&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 难点 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;律动和闷音的感觉&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 需要加强的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;还不够放松&lt;/li&gt;
  &lt;li&gt;动态不够好&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 做的不错的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲子的难度适中, 所以录音的成功率挺高的&lt;/li&gt;
  &lt;li&gt;在练习的时候使用了节拍器, 在录音的时候没有使用节拍器, 而是凭自我感觉&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 下次录音我会尝试的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;跟着原曲一起练习, 模仿他弹琴的律动和感觉&lt;/li&gt;
  &lt;li&gt;尝试慢速, 非常慢速地练习&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">烟花易冷</title><link href="https://dengqinghua.github.io/yan-hua-yi-leng.html" rel="alternate" type="text/html" title="烟花易冷" /><published>2021-01-06T00:00:00+08:00</published><updated>2021-01-06T00:00:00+08:00</updated><id>https://dengqinghua.github.io/yan-hua-yi-leng</id><content type="html" xml:base="https://dengqinghua.github.io/yan-hua-yi-leng.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;assets/js/pdf.js/web/viewer.html?file=/assets/doc/烟花易冷.pdf&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;assets/doc/烟花易冷.gp&quot;&gt;GuitarPro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.bilibili.com/video/BV1Lx411m7UQ&quot;&gt;蓝色六弦音乐空间&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹: &lt;a href=&quot;https://www.bilibili.com/video/BV13z4y167kG&quot;&gt;烟花易冷&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 律动 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;空闲音&lt;/li&gt;
  &lt;li&gt;滑弦&lt;/li&gt;
  &lt;li&gt;击弦&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; D 小调和弦 &quot; /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;I&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;II&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;III&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;IV&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;V&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VI&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VII&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dm&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edim&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;F&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Gm&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Am&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bb&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dm7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Eø&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FM7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Gm7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Am7 A7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;BbM7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CM7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr data-content=&quot; 难点 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;把位变换比较频繁&lt;/li&gt;
  &lt;li&gt;整体的稳定度要求较高&lt;/li&gt;
  &lt;li&gt;一些断音和延音的处理&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 需要加强的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;节奏还是不稳&lt;/li&gt;
  &lt;li&gt;一些音符的时值不够&lt;/li&gt;
  &lt;li&gt;勾弦的成功率比较低, 经常出现呲音 【需要持续地练习】&lt;/li&gt;
  &lt;li&gt;录音的效率不高, 一些错误的点还未完全练习够, 就开始进行录音&lt;/li&gt;
  &lt;li&gt;换把位的时候比较着急, 延音没有保持住&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 做的不错的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;在录音的时候, 认真听自己的回放, 在一些关键的部位做下了记号进行处理&lt;/li&gt;
  &lt;li&gt;虽然弹了很多遍, 但是整体来说并没有很紧张的感觉, 整个人在录音的状态下比较自然也比较放松&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 下次录音我会尝试的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;减少录音的时间(如在 1小时 内未录成功, 则说明需要更多的练习和熟悉)&lt;/li&gt;
  &lt;li&gt;看着谱子进行录音&lt;/li&gt;
  &lt;li&gt;听着节拍器多进行练习, 并在练习的时候就开始录一些片段, 尤其关注对换把位的和弦延音的维持&lt;/li&gt;
  &lt;li&gt;平常的时候要多进行慢速地练习和换把位练习&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">2020的总结 &amp;amp; 2021的flag</title><link href="https://dengqinghua.github.io/2020-backward-and-forward.html" rel="alternate" type="text/html" title="2020的总结 &amp; 2021的flag" /><published>2020-12-31T00:00:00+08:00</published><updated>2020-12-31T00:00:00+08:00</updated><id>https://dengqinghua.github.io/2020-backward-and-forward</id><content type="html" xml:base="https://dengqinghua.github.io/2020-backward-and-forward.html">&lt;hr data-content=&quot; 2020 &quot; /&gt;

&lt;p&gt;work&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;技术栈迁移到了 java,  并学习了 react 和 ts&lt;/li&gt;
  &lt;li&gt;第一次参加晋升答辩&lt;/li&gt;
  &lt;li&gt;获得了两个 a&lt;/li&gt;
  &lt;li&gt;高度参与 投放, 运营 和 销售, 学习如何从 0 到 1 做一个产品&lt;/li&gt;
  &lt;li&gt;思考所在公司的产品价值和商业价值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;good&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;录制 35 首曲子&lt;/li&gt;
  &lt;li&gt;完成 50% 的前水平&lt;/li&gt;
  &lt;li&gt;深蹲 140KG, 硬拉 150KG, 卧推 80KG&lt;/li&gt;
  &lt;li&gt;阅读 the music book&lt;/li&gt;
  &lt;li&gt;开始对政治, 经济和社会感兴趣&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bad&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;技术上没有新的进步&lt;/li&gt;
  &lt;li&gt;有一段时间经常喝酒, 浪费了很多时间&lt;/li&gt;
  &lt;li&gt;对社会发展的思考还不够, 没有系统的思维方式&lt;/li&gt;
  &lt;li&gt;除了录音之外的其他产出 (如 blog) 很少&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 2021 &quot; /&gt;

&lt;p&gt;flag&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;完成 100% 的前水平&lt;/li&gt;
  &lt;li&gt;深蹲 150KG, 硬拉 160KG, 卧推 90KG&lt;/li&gt;
  &lt;li&gt;阅读 10+ 本书(技术5, 经济/人文3, 音乐2), 并认真地写读书笔记&lt;/li&gt;
  &lt;li&gt;产出技术变现的模式和生产力&lt;/li&gt;
  &lt;li&gt;录制 40+ 首曲子(30+ 翻弹 和 5+ 原创 和 5+ 改编)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="memory showed" /><summary type="html"></summary></entry><entry><title type="html">typescript</title><link href="https://dengqinghua.github.io/typescript-record.html" rel="alternate" type="text/html" title="typescript" /><published>2020-12-25T00:00:00+08:00</published><updated>2020-12-25T00:00:00+08:00</updated><id>https://dengqinghua.github.io/typescript-record</id><content type="html" xml:base="https://dengqinghua.github.io/typescript-record.html">&lt;hr data-content=&quot; 安装 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;node&lt;/li&gt;
  &lt;li&gt;yarn, brew install yarn&lt;/li&gt;
  &lt;li&gt;typescript, yard add -g typescript&lt;/li&gt;
  &lt;li&gt;ts-node, yard add -g ts-node&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install node, yarn
yarn add -g typescript ts-node
# 获取安装的二进制地址
yarn bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; ts -&amp;gt; js &quot; /&gt;

&lt;p&gt;可以通过 tsc 去理解当前的 ts 的语法糖&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tsc class.ts --lib es2016,dom --pretty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    ts--&amp;gt;tsc--&amp;gt;js;
&lt;/div&gt;

&lt;hr data-content=&quot; 类型和语法 &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    any--&amp;gt;内置类型;
    any--&amp;gt;用户定义类型;
&lt;/div&gt;

&lt;p&gt;内置类型&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;string&lt;/li&gt;
  &lt;li&gt;number, 包括 整数 和 浮点数&lt;/li&gt;
  &lt;li&gt;void&lt;/li&gt;
  &lt;li&gt;null, 值是 undefined 的对象&lt;/li&gt;
  &lt;li&gt;undefined 初始化后的默认值&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 变量 &quot; /&gt;

&lt;p&gt;定义变量&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;var a:string = “a”&lt;/td&gt;
      &lt;td&gt;设置为 string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var a = “a”&lt;/td&gt;
      &lt;td&gt;和 上面 等价, a 的类型会被设置为 string (Inferred Typing)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var a:string&lt;/td&gt;
      &lt;td&gt;和 上面 等价, a 的类型会被设置为 string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var a&lt;/td&gt;
      &lt;td&gt;a 的类型会被设置为 any, 值是 undefined&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;作用域&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;global&lt;/li&gt;
  &lt;li&gt;class variable &amp;amp; class static variable&lt;/li&gt;
  &lt;li&gt;local (method)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 函数 &quot; /&gt;

&lt;p&gt;Optional Parameters: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;function a(id:number, name: string, desc?:string) {}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Rest Parameters: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;function a(id:number, ...restParams:string[]) {}&lt;/code&gt;&lt;/p&gt;

&lt;hr data-content=&quot; tuple &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var a = [10, &quot;d&quot;]
var x:string|number = a[0]
var y:string|number = a[1]
console.log(&quot;x is &quot; + x)
console.log(&quot;y is &quot; + y)
var [x, y] = a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; union &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let a:string|number;
a = 12
a = &quot;d&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一般多个类型的时候, 会使用 typeof 来做判断&lt;/p&gt;

&lt;hr data-content=&quot; interface &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;interface IPerson {
  name:string
  other:number|string
}

const person:IPerson = { name: &quot;a&quot;, other: 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; class &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    clazz--&amp;gt;Fields;
    clazz--&amp;gt;Constructors;
    clazz--&amp;gt;Functions;
&lt;/div&gt;

&lt;p&gt;typescipt 不支持多继承&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;static; 静态, 类变量/方法 的关键词&lt;/li&gt;
  &lt;li&gt;instanceof typeof;&lt;/li&gt;
  &lt;li&gt;implement; class 可以实现某个接口&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; namespace, module &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;namespace A {
  export interface IPerson {}
  export class IClazz {}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;module: external 和 internal&lt;/p&gt;</content><author><name>dengqinghua</name></author><summary type="html"></summary></entry><entry><title type="html">caged penatonic</title><link href="https://dengqinghua.github.io/boxed-penatonic.html" rel="alternate" type="text/html" title="caged penatonic" /><published>2020-12-20T00:00:00+08:00</published><updated>2020-12-20T00:00:00+08:00</updated><id>https://dengqinghua.github.io/boxed-penatonic</id><content type="html" xml:base="https://dengqinghua.github.io/boxed-penatonic.html">&lt;hr data-content=&quot; 原理 &quot; /&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/major-penatonic-edraw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr data-content=&quot; Key Points &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;必须要记住主音在吉他的位置。&lt;/li&gt;
  &lt;li&gt;需要能够自由转换。 比如由 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;G shape&lt;/code&gt; 转换到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;E shape&lt;/code&gt;, 通过 关键音 + 肌肉记忆 + 把位记忆 的方式&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 扩展 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;Key on Key Penatonic. 比如 当前是 D 和弦, 则转换为 D Major Penatonic, E 则换为 E Major Penatonic 以此类推&lt;/li&gt;
  &lt;li&gt;Minor Penatonic: A Major -&amp;gt; A minor, 只需要往下移动三品. 如 A Minor 为 C Major Penatonic 的音&lt;/li&gt;
  &lt;li&gt;练习的时候可以 pick 和 手指 交替拨弦&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yvPowvrxaWM&quot;&gt;Slow Blues Jam Backing Track (Key of A)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">Concurrency History</title><link href="https://dengqinghua.github.io/concurrency-history.html" rel="alternate" type="text/html" title="Concurrency History" /><published>2020-12-15T00:00:00+08:00</published><updated>2020-12-15T00:00:00+08:00</updated><id>https://dengqinghua.github.io/concurrency-history</id><content type="html" xml:base="https://dengqinghua.github.io/concurrency-history.html">&lt;p&gt;本文为视频 &lt;a href=&quot;https://www.youtube.com/watch?v=NsDE7E8sIdQ&quot;&gt;From Concurrent to Parallel&lt;/a&gt; 的学习笔记&lt;/p&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    performance--&amp;gt;error;
    performance--&amp;gt;lantency;
    performance--&amp;gt;throughput;
&lt;/div&gt;

&lt;hr data-content=&quot; 硬件性能 &quot; /&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gotw.ca/publications/concurrency-ddj.htm&quot;&gt;The Free Lunch Is Over: A Fundamental Turn Toward Concurrency in Software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/CPU_history.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software cannot keep the chip busy&lt;/strong&gt;&lt;/p&gt;

&lt;hr data-content=&quot; 问题模型 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;最大限度利用 CPU&lt;/li&gt;
  &lt;li&gt;最大限度的方式
    &lt;ul&gt;
      &lt;li&gt;单核
        &lt;ul&gt;
          &lt;li&gt;blocking/non-blocking IO, 后台IO型任务 (background task), 让出任务时钟&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;多核
        &lt;ul&gt;
          &lt;li&gt;粗粒度(coarsed-grained) task-based concurrency, 如服务器多线程的形式, 目的是 增加吞吐量(throughput)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;超级多的核
        &lt;ul&gt;
          &lt;li&gt;更重视 lantency, 更多的是任务形式的, 是否能很快处理任务&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Task -&amp;gt; Throughput -&amp;gt; Latency
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; 硬件驱动软件进步(解空间) &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java1 threads,locks
Java5 threads pools, blocking queue, concurrency collections
Java7 fork join
Java8 parallel stream
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; 并发还是并行 &quot; /&gt;

&lt;p&gt;并发 资源的维护和处理, 资源更高效地，更正确地使用 hard&lt;/p&gt;

&lt;p&gt;并行 处理得更快 easy&lt;/p&gt;

&lt;p&gt;并行的目的是更快，但是实际上不一定会更快, 因为 worker 之间处理的事情会更多&lt;/p&gt;

&lt;hr data-content=&quot; 是否使用并行 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;Analyse&lt;/li&gt;
  &lt;li&gt;Implement&lt;/li&gt;
  &lt;li&gt;Measure&lt;/li&gt;
  &lt;li&gt;Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用串行(sequential)直到并发是被验证有效的&lt;/p&gt;

&lt;p&gt;speedup 为测量指标&lt;/p&gt;

&lt;hr data-content=&quot; 并串行更多的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;分解问题&lt;/li&gt;
  &lt;li&gt;并发处理&lt;/li&gt;
  &lt;li&gt;收集问题&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; dataflow dependecy? &quot; /&gt;

&lt;p&gt;一些问题是无法用 串行 的方式解决&lt;/p&gt;

&lt;hr data-content=&quot; Divide &amp;amp; Conquer &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# All parallel algorithems
R solve(Problem&amp;lt;R&amp;gt; problem)
  if problem.isSmall()
    return problem.solveSequentially()

  R leftResult, rightResult;
  CONCURRENT {
    leftResult = R(solve(problem.left()))
    rightResult = R(solve(problem.right()))
  }

  return problem.combine(leftResult, rightResult)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在这里划分 problem.left() 和 problem.right() 比较重要&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No shared access, No mutable data (means no lock)&lt;/li&gt;
  &lt;li&gt;Yes task coordinate&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; Key Points &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;Keep CPU busy
    &lt;ul&gt;
      &lt;li&gt;divide one, run one, instead of divide all, run all&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tasks handle
    &lt;ul&gt;
      &lt;li&gt;串行?&lt;/li&gt;
      &lt;li&gt;多少个线程?&lt;/li&gt;
      &lt;li&gt;继续拆分为子任务?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;设计: 只需要子任务，而不要关心 coordinate 的事情&lt;/p&gt;

&lt;hr data-content=&quot; 性能怎么样 &quot; /&gt;

&lt;p&gt;性能损耗在哪里&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;split the source？&lt;/li&gt;
  &lt;li&gt;task management&lt;/li&gt;
  &lt;li&gt;result combine
    &lt;ul&gt;
      &lt;li&gt;add numbers are cheap, merging sets is expensive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;locality (elephant in the room)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要有很多的数据来进行测试和计算&lt;/p&gt;

&lt;hr data-content=&quot; Fork Join and streams &quot; /&gt;

&lt;p&gt;Fork Join&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Fork a task and wait it to complete&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;task management, scales from 1 to 100 threads (细粒度, CPU敏感的任务)&lt;/li&gt;
  &lt;li&gt;专属的 divide and conquer&lt;/li&gt;
  &lt;li&gt;基于 work stealing(keep CPU busy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;streams&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;possibly parallel&lt;/li&gt;
  &lt;li&gt;not always faster&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 评估是否该使用并行 &quot; /&gt;

&lt;p&gt;NQ model&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;NQ model &lt;br /&gt;
N = data items 的数目&lt;br /&gt;
Q = amount of work performed per item&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NQ &amp;gt; 10_000 才有可能获得 speedup&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.ibm.com/languages/java/articles/j-java-streams-5-brian-goetz/#thenqmodel&quot;&gt;see also&lt;/a&gt;&lt;/p&gt;

&lt;hr data-content=&quot; 性能的关键 &quot; /&gt;

&lt;p&gt;Source Splitting&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cost of source split&lt;/li&gt;
  &lt;li&gt;evenness of split&lt;/li&gt;
  &lt;li&gt;predictability of split&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Array 是最好的选择！ Linked List 不是, iterator 也不是&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;例子: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IntStream.range(0, 100).sum()&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IntStream.iterate(0, i -&amp;gt; i + 1).limit(100).sum()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Locality(elephant in the room)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cache heats&lt;/li&gt;
  &lt;li&gt;use Array and int&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enconter Order&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;source 是否跟 order 相关?&lt;/li&gt;
  &lt;li&gt;在 stream 中使用 unordered (告诉 stream 这个是无序的有助于优化)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Merging&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sum numbers is cheap, while group by is not&lt;/li&gt;
  &lt;li&gt;merge map,sets are expensive (并行有可能更慢)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;IntStream.range(0, n) 使用并行时候会慢 4x (n = 10K)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所以， 在并发的时候, 应该说 split 是什么样的, 数据量(N*Q)大吗? 跟顺序相关吗? 合并的数据是什么, 合并使用的结果集是什么, 可以使用 基础类型 吗?&lt;/p&gt;

&lt;p&gt;并发效果不好的几个原因&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NQ not high&lt;/li&gt;
  &lt;li&gt;Cache-miss ratio is high&lt;/li&gt;
  &lt;li&gt;source split cost is high&lt;/li&gt;
  &lt;li&gt;combination cost is high&lt;/li&gt;
  &lt;li&gt;order-sensitive&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 结论 &quot; /&gt;

&lt;p&gt;parallel is an optimization (not magic)&lt;/p&gt;

&lt;p&gt;在优化之前&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;真的有优化需求吗? (not for fun)&lt;/li&gt;
  &lt;li&gt;有优化后的性能测试吗？(往往很难)&lt;/li&gt;
  &lt;li&gt;性能达不到满足的条件吗?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few hundred is ok&lt;/p&gt;

&lt;p&gt;没有最好的标准, 但是有坏标准&lt;/p&gt;</content><author><name>dengqinghua</name></author><category term="concurrency conf" /><summary type="html">本文为视频 From Concurrent to Parallel 的学习笔记</summary></entry></feed>