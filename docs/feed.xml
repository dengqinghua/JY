<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://dengqinghua.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dengqinghua.github.io/" rel="alternate" type="text/html" /><updated>2021-01-03T00:35:31+08:00</updated><id>https://dengqinghua.github.io/feed.xml</id><title type="html">Dengqinghua.42</title><subtitle>Everything I think
</subtitle><author><name>dengqinghua</name></author><entry><title type="html">2020的总结 &amp;amp; 2021的flag</title><link href="https://dengqinghua.github.io/2020-backward-and-forward.html" rel="alternate" type="text/html" title="2020的总结 &amp; 2021的flag" /><published>2020-12-31T00:00:00+08:00</published><updated>2020-12-31T00:00:00+08:00</updated><id>https://dengqinghua.github.io/2020-backward-and-forward</id><content type="html" xml:base="https://dengqinghua.github.io/2020-backward-and-forward.html">&lt;hr data-content=&quot; 2020 &quot; /&gt;

&lt;p&gt;work&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;技术栈迁移到了 java,  并学习了 react 和 ts&lt;/li&gt;
  &lt;li&gt;第一次参加晋升答辩&lt;/li&gt;
  &lt;li&gt;获得了两个 a&lt;/li&gt;
  &lt;li&gt;高度参与 投放, 运营 和 销售, 学习如何从 0 到 1 做一个产品&lt;/li&gt;
  &lt;li&gt;思考所在公司的产品价值和商业价值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;good&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;录制 35 首曲子&lt;/li&gt;
  &lt;li&gt;完成 50% 的前水平&lt;/li&gt;
  &lt;li&gt;深蹲 140KG, 硬拉 150KG, 卧推 80KG&lt;/li&gt;
  &lt;li&gt;阅读 the music book&lt;/li&gt;
  &lt;li&gt;开始对政治, 经济和社会感兴趣&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bad&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;技术上没有新的进步&lt;/li&gt;
  &lt;li&gt;有一段时间经常喝酒, 浪费了很多时间&lt;/li&gt;
  &lt;li&gt;对社会发展的思考还不够, 没有系统的思维方式&lt;/li&gt;
  &lt;li&gt;除了录音之外的其他产出 (如 blog) 很少&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 2021 &quot; /&gt;

&lt;p&gt;flag&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;完成 100% 的前水平&lt;/li&gt;
  &lt;li&gt;深蹲 150KG, 硬拉 160KG, 卧推 90KG&lt;/li&gt;
  &lt;li&gt;阅读 10+ 本书(技术5, 经济/人文3, 音乐2), 并认真地写读书笔记&lt;/li&gt;
  &lt;li&gt;产出技术变现的模式和生产力&lt;/li&gt;
  &lt;li&gt;录制 40+ 首曲子(30+ 翻弹 和 5+ 原创 和 5+ 改编)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="memory showed" /><summary type="html"></summary></entry><entry><title type="html">typescript</title><link href="https://dengqinghua.github.io/typescript-record.html" rel="alternate" type="text/html" title="typescript" /><published>2020-12-25T00:00:00+08:00</published><updated>2020-12-25T00:00:00+08:00</updated><id>https://dengqinghua.github.io/typescript-record</id><content type="html" xml:base="https://dengqinghua.github.io/typescript-record.html">&lt;hr data-content=&quot; 安装 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;node&lt;/li&gt;
  &lt;li&gt;yarn, brew install yarn&lt;/li&gt;
  &lt;li&gt;typescript, yard add -g typescript&lt;/li&gt;
  &lt;li&gt;ts-node, yard add -g ts-node&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install node, yarn
yarn add -g typescript ts-node
# 获取安装的二进制地址
yarn bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; ts -&amp;gt; js &quot; /&gt;

&lt;p&gt;可以通过 tsc 去理解当前的 ts 的语法糖&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tsc class.ts --lib es2016,dom --pretty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    ts--&amp;gt;tsc--&amp;gt;js;
&lt;/div&gt;

&lt;hr data-content=&quot; 类型和语法 &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    any--&amp;gt;内置类型;
    any--&amp;gt;用户定义类型;
&lt;/div&gt;

&lt;p&gt;内置类型&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;string&lt;/li&gt;
  &lt;li&gt;number, 包括 整数 和 浮点数&lt;/li&gt;
  &lt;li&gt;void&lt;/li&gt;
  &lt;li&gt;null, 值是 undefined 的对象&lt;/li&gt;
  &lt;li&gt;undefined 初始化后的默认值&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 变量 &quot; /&gt;

&lt;p&gt;定义变量&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;var a:string = “a”&lt;/td&gt;
      &lt;td&gt;设置为 string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var a = “a”&lt;/td&gt;
      &lt;td&gt;和 上面 等价, a 的类型会被设置为 string (Inferred Typing)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var a:string&lt;/td&gt;
      &lt;td&gt;和 上面 等价, a 的类型会被设置为 string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var a&lt;/td&gt;
      &lt;td&gt;a 的类型会被设置为 any, 值是 undefined&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;作用域&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;global&lt;/li&gt;
  &lt;li&gt;class variable &amp;amp; class static variable&lt;/li&gt;
  &lt;li&gt;local (method)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 函数 &quot; /&gt;

&lt;p&gt;Optional Parameters: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;function a(id:number, name: string, desc?:string) {}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Rest Parameters: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;function a(id:number, ...restParams:string[]) {}&lt;/code&gt;&lt;/p&gt;

&lt;hr data-content=&quot; tuple &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var a = [10, &quot;d&quot;]
var x:string|number = a[0]
var y:string|number = a[1]
console.log(&quot;x is &quot; + x)
console.log(&quot;y is &quot; + y)
var [x, y] = a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; union &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let a:string|number;
a = 12
a = &quot;d&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一般多个类型的时候, 会使用 typeof 来做判断&lt;/p&gt;

&lt;hr data-content=&quot; interface &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;interface IPerson {
  name:string
  other:number|string
}

const person:IPerson = { name: &quot;a&quot;, other: 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; class &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    clazz--&amp;gt;Fields;
    clazz--&amp;gt;Constructors;
    clazz--&amp;gt;Functions;
&lt;/div&gt;

&lt;p&gt;typescipt 不支持多继承&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;static; 静态, 类变量/方法 的关键词&lt;/li&gt;
  &lt;li&gt;instanceof typeof;&lt;/li&gt;
  &lt;li&gt;implement; class 可以实现某个接口&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; namespace, module &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;namespace A {
  export interface IPerson {}
  export class IClazz {}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;module: external 和 internal&lt;/p&gt;</content><author><name>dengqinghua</name></author><summary type="html"></summary></entry><entry><title type="html">caged penatonic</title><link href="https://dengqinghua.github.io/boxed-penatonic.html" rel="alternate" type="text/html" title="caged penatonic" /><published>2020-12-20T00:00:00+08:00</published><updated>2020-12-20T00:00:00+08:00</updated><id>https://dengqinghua.github.io/boxed-penatonic</id><content type="html" xml:base="https://dengqinghua.github.io/boxed-penatonic.html">&lt;hr data-content=&quot; 原理 &quot; /&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/major-penatonic-edraw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr data-content=&quot; Key Points &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;必须要记住主音在吉他的位置。&lt;/li&gt;
  &lt;li&gt;需要能够自由转换。 比如由 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;G shape&lt;/code&gt; 转换到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;E shape&lt;/code&gt;, 通过 关键音 + 肌肉记忆 + 把位记忆 的方式&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 扩展 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;Key on Key Penatonic. 比如 当前是 D 和弦, 则转换为 D Major Penatonic, E 则换为 E Major Penatonic 以此类推&lt;/li&gt;
  &lt;li&gt;Minor Penatonic: A Major -&amp;gt; A minor, 只需要往下移动三品. 如 A Minor 为 C Major Penatonic 的音&lt;/li&gt;
  &lt;li&gt;练习的时候可以 pick 和 手指 交替拨弦&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yvPowvrxaWM&quot;&gt;Slow Blues Jam Backing Track (Key of A)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">Concurrency History</title><link href="https://dengqinghua.github.io/concurrency-history.html" rel="alternate" type="text/html" title="Concurrency History" /><published>2020-12-15T00:00:00+08:00</published><updated>2020-12-15T00:00:00+08:00</updated><id>https://dengqinghua.github.io/concurrency-history</id><content type="html" xml:base="https://dengqinghua.github.io/concurrency-history.html">&lt;p&gt;本文为视频 &lt;a href=&quot;https://www.youtube.com/watch?v=NsDE7E8sIdQ&quot;&gt;From Concurrent to Parallel&lt;/a&gt; 的学习笔记&lt;/p&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    performance--&amp;gt;error;
    performance--&amp;gt;lantency;
    performance--&amp;gt;throughput;
&lt;/div&gt;

&lt;hr data-content=&quot; 硬件性能 &quot; /&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gotw.ca/publications/concurrency-ddj.htm&quot;&gt;The Free Lunch Is Over: A Fundamental Turn Toward Concurrency in Software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/CPU_history.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software cannot keep the chip busy&lt;/strong&gt;&lt;/p&gt;

&lt;hr data-content=&quot; 问题模型 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;最大限度利用 CPU&lt;/li&gt;
  &lt;li&gt;最大限度的方式
    &lt;ul&gt;
      &lt;li&gt;单核
        &lt;ul&gt;
          &lt;li&gt;blocking/non-blocking IO, 后台IO型任务 (background task), 让出任务时钟&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;多核
        &lt;ul&gt;
          &lt;li&gt;粗粒度(coarsed-grained) task-based concurrency, 如服务器多线程的形式, 目的是 增加吞吐量(throughput)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;超级多的核
        &lt;ul&gt;
          &lt;li&gt;更重视 lantency, 更多的是任务形式的, 是否能很快处理任务&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Task -&amp;gt; Throughput -&amp;gt; Latency
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; 硬件驱动软件进步(解空间) &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java1 threads,locks
Java5 threads pools, blocking queue, concurrency collections
Java7 fork join
Java8 parallel stream
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr data-content=&quot; 并发还是并行 &quot; /&gt;

&lt;p&gt;并发 资源的维护和处理, 资源更高效地，更正确地使用 hard&lt;/p&gt;

&lt;p&gt;并行 处理得更快 easy&lt;/p&gt;

&lt;p&gt;并行的目的是更快，但是实际上不一定会更快, 因为 worker 之间处理的事情会更多&lt;/p&gt;

&lt;hr data-content=&quot; 是否使用并行 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;Analyse&lt;/li&gt;
  &lt;li&gt;Implement&lt;/li&gt;
  &lt;li&gt;Measure&lt;/li&gt;
  &lt;li&gt;Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用串行(sequential)直到并发是被验证有效的&lt;/p&gt;

&lt;p&gt;speedup 为测量指标&lt;/p&gt;

&lt;hr data-content=&quot; 并串行更多的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;分解问题&lt;/li&gt;
  &lt;li&gt;并发处理&lt;/li&gt;
  &lt;li&gt;收集问题&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; dataflow dependecy? &quot; /&gt;

&lt;p&gt;一些问题是无法用 串行 的方式解决&lt;/p&gt;

&lt;hr data-content=&quot; Divide &amp;amp; Conquer &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# All parallel algorithems
R solve(Problem&amp;lt;R&amp;gt; problem)
  if problem.isSmall()
    return problem.solveSequentially()

  R leftResult, rightResult;
  CONCURRENT {
    leftResult = R(solve(problem.left()))
    rightResult = R(solve(problem.right()))
  }

  return problem.combine(leftResult, rightResult)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在这里划分 problem.left() 和 problem.right() 比较重要&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No shared access, No mutable data (means no lock)&lt;/li&gt;
  &lt;li&gt;Yes task coordinate&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; Key Points &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;Keep CPU busy
    &lt;ul&gt;
      &lt;li&gt;divide one, run one, instead of divide all, run all&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tasks handle
    &lt;ul&gt;
      &lt;li&gt;串行?&lt;/li&gt;
      &lt;li&gt;多少个线程?&lt;/li&gt;
      &lt;li&gt;继续拆分为子任务?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;设计: 只需要子任务，而不要关心 coordinate 的事情&lt;/p&gt;

&lt;hr data-content=&quot; 性能怎么样 &quot; /&gt;

&lt;p&gt;性能损耗在哪里&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;split the source？&lt;/li&gt;
  &lt;li&gt;task management&lt;/li&gt;
  &lt;li&gt;result combine
    &lt;ul&gt;
      &lt;li&gt;add numbers are cheap, merging sets is expensive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;locality (elephant in the room)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要有很多的数据来进行测试和计算&lt;/p&gt;

&lt;hr data-content=&quot; Fork Join and streams &quot; /&gt;

&lt;p&gt;Fork Join&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Fork a task and wait it to complete&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;task management, scales from 1 to 100 threads (细粒度, CPU敏感的任务)&lt;/li&gt;
  &lt;li&gt;专属的 divide and conquer&lt;/li&gt;
  &lt;li&gt;基于 work stealing(keep CPU busy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;streams&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;possibly parallel&lt;/li&gt;
  &lt;li&gt;not always faster&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 评估是否该使用并行 &quot; /&gt;

&lt;p&gt;NQ model&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;NQ model &lt;br /&gt;
N = data items 的数目&lt;br /&gt;
Q = amount of work performed per item&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NQ &amp;gt; 10_000 才有可能获得 speedup&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.ibm.com/languages/java/articles/j-java-streams-5-brian-goetz/#thenqmodel&quot;&gt;see also&lt;/a&gt;&lt;/p&gt;

&lt;hr data-content=&quot; 性能的关键 &quot; /&gt;

&lt;p&gt;Source Splitting&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cost of source split&lt;/li&gt;
  &lt;li&gt;evenness of split&lt;/li&gt;
  &lt;li&gt;predictability of split&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Array 是最好的选择！ Linked List 不是, iterator 也不是&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;例子: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IntStream.range(0, 100).sum()&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IntStream.iterate(0, i -&amp;gt; i + 1).limit(100).sum()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Locality(elephant in the room)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cache heats&lt;/li&gt;
  &lt;li&gt;use Array and int&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enconter Order&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;source 是否跟 order 相关?&lt;/li&gt;
  &lt;li&gt;在 stream 中使用 unordered (告诉 stream 这个是无序的有助于优化)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Merging&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sum numbers is cheap, while group by is not&lt;/li&gt;
  &lt;li&gt;merge map,sets are expensive (并行有可能更慢)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;IntStream.range(0, n) 使用并行时候会慢 4x (n = 10K)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所以， 在并发的时候, 应该说 split 是什么样的, 数据量(N*Q)大吗? 跟顺序相关吗? 合并的数据是什么, 合并使用的结果集是什么, 可以使用 基础类型 吗?&lt;/p&gt;

&lt;p&gt;并发效果不好的几个原因&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NQ not high&lt;/li&gt;
  &lt;li&gt;Cache-miss ratio is high&lt;/li&gt;
  &lt;li&gt;source split cost is high&lt;/li&gt;
  &lt;li&gt;combination cost is high&lt;/li&gt;
  &lt;li&gt;order-sensitive&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 结论 &quot; /&gt;

&lt;p&gt;parallel is an optimization (not magic)&lt;/p&gt;

&lt;p&gt;在优化之前&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;真的有优化需求吗? (not for fun)&lt;/li&gt;
  &lt;li&gt;有优化后的性能测试吗？(往往很难)&lt;/li&gt;
  &lt;li&gt;性能达不到满足的条件吗?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few hundred is ok&lt;/p&gt;

&lt;p&gt;没有最好的标准, 但是有坏标准&lt;/p&gt;</content><author><name>dengqinghua</name></author><category term="concurrency conf" /><summary type="html">本文为视频 From Concurrent to Parallel 的学习笔记</summary></entry><entry><title type="html">Inside of Outside</title><link href="https://dengqinghua.github.io/inside-of-outside.html" rel="alternate" type="text/html" title="Inside of Outside" /><published>2020-12-14T00:00:00+08:00</published><updated>2020-12-14T00:00:00+08:00</updated><id>https://dengqinghua.github.io/inside_of_outside</id><content type="html" xml:base="https://dengqinghua.github.io/inside-of-outside.html">&lt;hr data-content=&quot; BestMem &quot; /&gt;

&lt;p&gt;在网盘里面有一张图片, 放在了小明电脑最醒目的位置, 名字为 BestMem, 是她在马赛时候写的:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;亲爱的:

其实我很感谢你今天在路上的逼问, 如果能有人每天这样质问自己, 我肯定不会是现在成为的样子.

这段时间的状态很奇妙, 虽然好像让你看到我无安全感的高峰状态, 但其实请你放心: 我真的没什么不好.

好像这两天常用的一个问式是 &quot;What if you are far away from me...&quot;, 这么多年, 我觉得我的内核是没有改变的, 是看清了心中那个极需要安全感的小女孩的面目, 她一直都在, 只是有时被非自我的在界发生的事情掩盖起来了.

或者是因为有一个人的出现让她感到不曾有过的恋意的安全感, 甚至是随叫随到.

也许这两天的情绪上你感到我的 Chaos 从而对我产生担忧. 大概只是语无伦次, 而且潜意识中是想通过示弱表达亲近感, 或许, 平日的我太过于强势了. 但一般人都又会喜欢这种黏腻吧!

抱歉, 这次自我太极致.

在接下来的几日以及你走之后的这五个月里, 我希望能以自己的表现让你安心, 原则就是 move forward. 不要担时间浪费在无谓的行为里, 但需要你有准备的是有时我会欠为你考虑.

其实我需要文字记在案, 来理清想法以及为自己的行动提供一份内在的支持. 既然点名给你, 希望你能理解, 并且相信我可以很 BT 的! 

这几天还有一些不做则对你成对我会是遗憾的事:

1. 陪我跑一次步，直到我们想停下来;
2. 陪你看一部完整的电影;
3. 尝试一起学习;
4. 等你精心做一顿饭;
5. 和你安静下来听歌;
6. 教我你想教会我的 skill.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hey, 多么美好的回忆呢! 需要感和被需要感.&lt;/p&gt;

&lt;p&gt;小明和她最后好像也结婚了, 慢慢地两人也没有太多的感觉, 感受的能力也越来越淡漠了.&lt;/p&gt;

&lt;hr data-content=&quot; From When and Where &quot; /&gt;

&lt;p&gt;好像两人的关系也越来越淡漠了, 对啊, 她是希望可以交流的, 她写了第一封信, 期待小明的回复&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;亲爱的老公:

这两天把你神经搞得有点紧张, 抱歉, 我觉得还是落于纸面的沟通比较好, 希望你有空间去理性的
想想后回应.

我常常对我们的关系加以审视, 不是 JUDGEMENT, 而是从我的感受出发去评判我们应该为这段关系维持或更融洽作出怎样的改变和改善.

也许你会反感, 每次都感觉是我对你提要求, 我也很希望你能对我有所要求——当然不是针对个别不愉快的事件态去提那样我会有抗性, 就像今早一样.

希望你平时也把人生中所要面临的关系当做课题去想, 而后找个合适的时间跟我沟通.
哪怕有的你没概念, 也不要逃避, 都是要经历成长的, 这也是种准备.

我感觉到自己的一些变化, 大概是创业后在幺妈影响下积攒起来的, 更结果导向, 理性的思考和沟通, 遗憾你没有见证.
所以当你再以曾经对我的眼光来评判我的时候, 我可能也不去争取你印象的改观了.

我以前很依赖你, 你的包容甚至宠溺, 不承认自己的毛病是毛病, 你也没有对我郑重提过要求, 只是在我焦虑的时候给予建议.
这似乎成了我们能维持和谐的一个稳定因素, 但客观来说老公你的宠溺让我缺乏改变的动力, 固步自封.

现在的处境要求我成为一个人格更独立的人, 需要更客观的直面自己的问题并寻求改变. 这样一来, 曾经认为不是问题的问题就变得很突出, 亟待解决.
我很享受这带来的推动力. 现在的我可能比之前更有目的性, 在你看来有点突然和生硬, 但我想这样的牛虻精神对我们是好事.

当我感觉自己在成长, 我希望你能跟我在同一个成长的频道, 所以才会问你认为自己的增长点在哪.
也许你会说最近在钻研乐理, 那我把问题更明确: 对于家庭来说, 你的智性和情感方面的增长点在哪?

或者说老公除了包容, 呵护, 你能带领我的领域在哪?

如果这个问题对你来说过于抽象, 我希望你去试着更多的抽象思维, 毕竟人生中不是所有问题都能印证因果, 明辨对错.
没有标准答案只能一直去探索的问题也值得你花时间去思考.

我很看重这样的思考和研讨, 一直都是.

好了, 我要看书啦. 期待你的回复.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;小明怎么回复呢, 他在一段时间的变化中有着一些的变化(或者是抑郁症吗), 经常会有很多奇怪的想法, 比
如一些伤害自己的欲望和动作. 也咨询了很多有患病经历的朋友. 失去感受是最大的问题. 小明会知道正常
人应该如何回应, 也知道怎么样才是正确的回应, 但是他无法回应.&lt;/p&gt;

&lt;p&gt;或者失去了感受能力吧!&lt;/p&gt;

&lt;hr data-content=&quot; Lose or Try to... &quot; /&gt;

&lt;p&gt;小明有时候会用酒精麻醉自己, 甚至一段时间对酒精的欲望已经超出了酒精本身. 他有时候会想着人生的意义
是什么呢, 从什么时候变得如此冷漠的. 或许是因为无法在任何地方找到对应的满足感? 甚至 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;被需要感&lt;/code&gt; 也
找不到了.&lt;/p&gt;

&lt;p&gt;小明尝试着回复她的 &lt;strong&gt;第一封信&lt;/strong&gt;, 但是又不想去给出什么样的结论, 或者是 &lt;strong&gt;不能&lt;/strong&gt; 给出什么结论.&lt;/p&gt;

&lt;p&gt;小明的不是回复的回复:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;亲爱的: 

一直没有办法想到如何回复你的第一封信.

我始终觉得人应该将人的诉求本身和周围区分开, 可能对于你而言, 我更多的不是 guide, 而是在思考你的内心需求是什么呢.

一开始的时候, 我觉得你是一个需要安全感的女孩, 你很独立【Both 物质 &amp;amp; 精神】, 家境优渥, 喜欢思考.

但是其实你是一个非常有精神洁癖的人, 无论是对音乐, 对人文, 还是对这个世界的认知.
慢慢地因为现实的一些问题, 再加上你的经历, 你会更加地入世.

至于我呢, 我一直还是那样啊!  简单, 自我, 封闭 和 谨小慎微

你希望我和世界连接, 和你更多地连接和思考, 思考小我, 家庭 和 世界关系, 思考往后的走向是什么.

比如 更高的薪酬, 对教育孩童的理解, 拥抱变化, 对 政治, 历史, 经济 有自己的想法和倾向, 有商业思维等等.

其实我一直在思考一个宿命论的问题, 经历的一切是不是已经是注定的, 努力会存在意义吗? 
在当前的现状【宿命】下, 我应该去花时间在【谈资】上吗?

世界的无意义性意味着什么? 其实有人说, 世界的无意义性 和 世界的有意义性 是一个硬币的两面,
对于人本身, 及时行乐更重要吧.

所以我觉得自己好像一直也没变, 所有的议题【历史, 经济, 政治】都是没问题的, 但是对于我而言, 人文本身会更重要.
我理解的人文本身, 是真正的我会发自内心去研究, 去思考, 去包容的事情.

我带领你吗? No, I won't, I am not your leader.

你不需要任何人的带领, 你本身就已经足够聪明(也足够地排外), 你的思维方式也是比较固定的, 也是很难被引导的.

那我可以做什么?

我始终认为人的成长由他的专业性决定, 而专业性定义了他的经济价值. 所谓对见识, 远见的追求
往往是自身无法理解世界本身导致的.

那我理解世界吗?

我不理解, 但是我理解世界的无意义性和我应该要专注的事情. 我本身就是影响源, 不需要刻意去练
习某一个我不存在的技能.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;小明看起来已经放弃了世界一样, 所谓的成熟让他变得更冷漠而不是更温柔. 可能小明也无法理解世界的运作方式, 他
对自己无法 control 的东西存在天然的排外性, 只愿意做一个将世界放在身后的鸵鸟.&lt;/p&gt;

&lt;p&gt;OR 小明也在等待他的时代的到来, 在厚积薄发? 历史的进程往往只是由几个人决定的, 他的存在本身就是没有意义的,
他的意义或者永远也不会到来.&lt;/p&gt;

&lt;hr data-content=&quot; What if... &quot; /&gt;

&lt;p&gt;小明好像不会去抱怨, 他好像比较坚定, 对未来无所畏惧. 但是那些有可能是假象, 或者他只是一个 Lonely Boy, with
endless darkness inside.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;What if world turns around,&lt;br /&gt;
What if she is never met,&lt;br /&gt;
What if He is traveller,&lt;br /&gt;
when everything falls apart,&lt;br /&gt;
Nothing else matters.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>dengqinghua</name></author><category term="feel" /><summary type="html"></summary></entry><entry><title type="html">泛音相关</title><link href="https://dengqinghua.github.io/harmonics.html" rel="alternate" type="text/html" title="泛音相关" /><published>2020-12-13T00:00:00+08:00</published><updated>2020-12-13T00:00:00+08:00</updated><id>https://dengqinghua.github.io/harmonics</id><content type="html" xml:base="https://dengqinghua.github.io/harmonics.html">&lt;hr data-content=&quot; 原理 &quot; /&gt;

&lt;p&gt;+12品&lt;/p&gt;

&lt;p&gt;一般来说, 民谣吉他有 21品, 可以谈到泛音能到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;21-12=9&lt;/code&gt;, 但是实际上 10品的也可以继续往后面弹,
但是就得记住无品格指导下的位置&lt;/p&gt;

&lt;hr data-content=&quot; 基础 &quot; /&gt;

&lt;p&gt;在 ProGuitar 中, 提供了几个最基础的例子.&lt;/p&gt;

&lt;p&gt;下面的都是在 &lt;strong&gt;五品&lt;/strong&gt; 进行&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6 2 5 1 3 6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;五声音阶&lt;/p&gt;

    &lt;p&gt;【五品】&amp;lt;6_&amp;gt; 1 &amp;lt;2&amp;gt; 3 &amp;lt;5&amp;gt; 6 &amp;lt;1&amp;gt; 6 &amp;lt;5&amp;gt; 3 &amp;lt;2&amp;gt; 1 &amp;lt;6&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;击勾弦组成的旋律音&lt;/p&gt;

    &lt;p&gt;&amp;lt;1&amp;gt; + (勾弦)76; &amp;lt;5&amp;gt; + (勾弦)43&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;组合形式&lt;/p&gt;

    &lt;p&gt;五声音阶 + (击弦)67 + &amp;lt;1&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;和弦形式&lt;/p&gt;

    &lt;p&gt;很多和弦的组合音非常丰富, 个人觉得是需要有一些 挂留和弦 和 属和弦 等等, 添加了 2度, 4度 等
 非常多的和弦外的音, 会让泛音的色彩更加丰富, 利用一些和弦的音色, 弹奏旋律一样的效果&lt;/p&gt;

    &lt;p&gt;ProGuitar 中给出了很多和弦的例子, 分别分为 大和弦 小和弦 和 属和弦 三类, 均以 7,9,11,13 为主&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 引申 &quot; /&gt;

&lt;p&gt;Harmonic Vol2 包括下面的引申部分&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;5,7,12 品的泛音连接&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 五品   6  2 5 1 3  6
 七品   #1 3 6 2 #4 7
 十二品 3  6 2 5 7  3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;上述三个品味的自然泛音, 包括 &lt;strong&gt;1 #1 2 3 #4 5 6 7&lt;/strong&gt;, 可以用来弹奏 G/Em A/Am 的旋律音&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;call &amp;amp; response&lt;/p&gt;

    &lt;p&gt;利用 泛音 作为 response&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;普通音 + 泛音 + 击勾弦&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;演奏音程, Arpe 等等, 并将所有的部分组合起来&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;个人理解该部分需要不停地去思考和运用, 其实真正地将 &lt;strong&gt;律动&lt;/strong&gt; 和 &lt;strong&gt;音阶, 音程, 和弦, 琶音&lt;/strong&gt; 结合起来, 加上
吉他特有的&lt;strong&gt;击勾弦&lt;/strong&gt;, 可以构成非常丰富和华丽的 &lt;strong&gt;水波泛音&lt;/strong&gt;。&lt;/p&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">syncronized的使用</title><link href="https://dengqinghua.github.io/syncronized.html" rel="alternate" type="text/html" title="syncronized的使用" /><published>2020-12-06T00:00:00+08:00</published><updated>2020-12-06T00:00:00+08:00</updated><id>https://dengqinghua.github.io/syncronized</id><content type="html" xml:base="https://dengqinghua.github.io/syncronized.html">&lt;h2 id=&quot;syncronized&quot;&gt;syncronized&lt;/h2&gt;</content><author><name>dengqinghua</name></author><category term="concurrency" /><summary type="html">syncronized</summary></entry><entry><title type="html">Markdown例子-博尔赫斯</title><link href="https://dengqinghua.github.io/example.html" rel="alternate" type="text/html" title="Markdown例子-博尔赫斯" /><published>2020-12-03T00:00:00+08:00</published><updated>2020-12-03T00:00:00+08:00</updated><id>https://dengqinghua.github.io/example</id><content type="html" xml:base="https://dengqinghua.github.io/example.html">&lt;h2 id=&quot;生平&quot;&gt;生平&lt;/h2&gt;
&lt;hr data-content=&quot; 基本信息 &quot; /&gt;

&lt;p&gt;豪尔赫·路易斯·博尔赫斯（西班牙文：Jorge Luis Borges，1899年8月24日－1986年6月14日），又译波赫士，阿根廷作家、诗人、翻译家。其作品涵盖包括短篇小说、短文、随笔小品、诗、文学评论、翻译文学在内的多个文学范畴，以隽永的文字和深刻的哲理见长。&lt;/p&gt;

&lt;p&gt;由于遗传病，博尔赫斯年近六旬即双目失明&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。1955年，他被任命为国家公共图书馆馆长以及布宜诺斯艾利斯大学的文学教授。1961年，他与萨缪尔·贝克特一起获得了第一届国际文学福门托奖 Prix Formentor，从此逐渐得到国际文坛关注。他的作品被广泛译介到欧美国家，他本人也是一位翻译家，除母语西班牙语外，精通英语、德语、法语、古英语、古诺尔斯语等。1986年，他在瑞士日内瓦去世。&lt;/p&gt;

&lt;hr data-content=&quot; 作品介绍 &quot; /&gt;

&lt;p&gt;他的作品反映了“世界的混沌性和文学的非现实感”。他最著名的短篇《虚构集》（1944）和《阿莱夫》（1949）中就汇集了很多共同的主题：梦、迷宫、图书馆、虚构的作家和作品、宗教、神祇。他的作品对幻想文学贡献巨大。
研究者们也注意到博尔赫斯不断恶化的眼疾似乎有助于他创造性的文学语言，毕竟，“诗人，和盲人一样，能暗中视物”。&lt;/p&gt;

&lt;p&gt;库切曾经评价道：他，甚于任何其他人，大大创新了小说的语言，为整整一代伟大的拉美小说家开创了道路。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/c/c5/Borges_1921.jpg&quot; alt=&quot;&quot; class=&quot;img-left&quot; /&gt;&lt;/p&gt;

&lt;p&gt;博尔赫斯生平获得过多种文学奖项。其偏于保守的政治观点曾备受争议，并被广泛认为是其处于诺贝尔文学奖候选名单三十年之久却不曾获奖的重要原因&lt;/p&gt;

&lt;p&gt;他的作品反映了“世界的混沌性和文学的非现实感”。他最著名的短篇集《虚构集》（1944）和《阿莱夫》（1949）中就汇集了很多共同的主题：梦、迷宫、图书馆、虚构的作家和作品、宗教、神祇。他的作品对幻想文学贡献巨大。&lt;/p&gt;

&lt;p&gt;研究者们也注意到博尔赫斯不断恶化的眼疾似乎有助于他创造性的文学语言，毕竟，&lt;strong&gt;诗人，和盲人一样，能暗中视物&lt;/strong&gt;。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;时间&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;事件&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1899&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;出生&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1961&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FormentorPrize&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;事件&quot;&gt;事件&lt;/h1&gt;
&lt;p&gt;豪尔赫·路易斯·博尔赫斯在九岁时将王尔德的《快乐王子》翻译成西班牙文，刊登在地方杂志上。不过博尔赫斯的朋友认为博尔赫斯的父亲才是真正的译者。博尔赫斯的父亲博尔赫斯·哈斯拉姆是有文学抱负的律师及心理学老师。虽然其父也曾出版过一本书《领袖》(El caudillo)，博尔赫斯称他的父亲“想要成为作家，但在尝试中失败了。”&lt;/p&gt;

&lt;p&gt;博尔赫斯写道：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“我祖辈中有许多人曾经从军，但我却知自己不是这块料；从很小时起，我就常因自己嗜书而不善行而感羞愧。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/d/d5/Jorge_Luis_Borges_Hotel.jpg&quot; alt=&quot;&quot; class=&quot;img-right&quot; /&gt;&lt;/p&gt;

&lt;p&gt;豪尔赫·路易斯·博尔赫斯11岁前在家中接受教育，自幼学习西班牙语和英语两种语言，十二岁时就开始用英文阅读莎士比亚。博尔赫斯的家很大，其家中图书馆拥有上千卷英文藏书。博尔赫斯将该图书馆视为其人生最重要的影响因素。&lt;/p&gt;

&lt;h1 id=&quot;著作&quot;&gt;著作&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;阿莱夫&lt;/p&gt;

    &lt;p&gt;阿莱夫是希伯来语字母表的第一个字母。用它来做我啰唆的故事的标题并不是信手拈来的。在犹太神秘哲学中，这个字母指无限的、纯真的神明；据说它的形状是一个指天指地的人，说明下面的世界是一面镜子，是上面世界的地图；在集合论理论中，它是超穷数字的象征，在超穷数字中，总和并不大于它的组成部分。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;小径分岔的花园&lt;/p&gt;

    &lt;p&gt;《小径分岔的花园》（西班牙语：”El jardín de senderos que se bifurcan”，又名《交叉小径的花园》）是阿根廷作家和诗人豪尔赫·路易斯·博尔赫斯在1941年创作的短篇故事 。该短篇被收录在1994年全文发表于《虚构集》上的同名文集《小径分岔的花园》（1941）中。 这篇文章也是博尔赫斯第一篇被安东尼·鲍彻翻译成英文的作品，其译文发表在1948年8月版的《埃勒里·奎因推理杂志》上&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 迷宫1 &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    A--&amp;gt;B;
    A--&amp;gt;E;
    A--&amp;gt;C;
    E--&amp;gt;F;
    B--&amp;gt;D;
    C--&amp;gt;D;
    D--&amp;gt;F;
&lt;/div&gt;

&lt;hr data-content=&quot; 对话1 &quot; /&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    autonumber
    Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts!
    John--&amp;gt;&amp;gt;Alice: Great!
    John-&amp;gt;&amp;gt;Bob: How about you?
    Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/div&gt;

&lt;hr data-content=&quot; 引用 &quot; /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B1%AA%E5%B0%94%E8%B5%AB%C2%B7%E8%B7%AF%E6%98%93%E6%96%AF%C2%B7%E5%8D%9A%E5%B0%94%E8%B5%AB%E6%96%AF&quot;&gt;豪尔赫·路易斯·博尔赫斯 维基百科&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>dengqinghua</name></author><summary type="html">生平</summary></entry><entry><title type="html">烟花易冷</title><link href="https://dengqinghua.github.io/yan-hua-yi-leng.html" rel="alternate" type="text/html" title="烟花易冷" /><published>2020-12-01T00:00:00+08:00</published><updated>2020-12-01T00:00:00+08:00</updated><id>https://dengqinghua.github.io/yan-hua-yi-leng</id><content type="html" xml:base="https://dengqinghua.github.io/yan-hua-yi-leng.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;assets/js/pdf.js/web/viewer.html?file=/assets/doc/烟花易冷.pdf&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;assets/doc/烟花易冷.gp&quot;&gt;GuitarPro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.bilibili.com/video/BV1Lx411m7UQ&quot;&gt;蓝色六弦音乐空间&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 律动 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;空闲音&lt;/li&gt;
  &lt;li&gt;滑弦&lt;/li&gt;
  &lt;li&gt;击弦&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; D 小调和弦 &quot; /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;I&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;II&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;III&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;IV&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;V&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VI&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VII&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dm&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edim&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;F&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Gm&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Am&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bb&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Dm7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Eø&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FM7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Gm7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Am7 A7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;BbM7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CM7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">潇洒走一回</title><link href="https://dengqinghua.github.io/live-more.html" rel="alternate" type="text/html" title="潇洒走一回" /><published>2020-12-01T00:00:00+08:00</published><updated>2020-12-01T00:00:00+08:00</updated><id>https://dengqinghua.github.io/live-more</id><content type="html" xml:base="https://dengqinghua.github.io/live-more.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;assets/js/pdf.js/web/viewer.html?file=/assets/doc/潇洒走一回2.pdf&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;assets/doc/潇洒走一回2.gp&quot;&gt;GuitarPro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.bilibili.com/video/BV1Xx411r7zf&quot;&gt;蓝色六弦音乐空间&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹: &lt;a href=&quot;https://www.bilibili.com/video/BV1ZX4y1M7Na&quot;&gt;吉他指弹 潇洒走一回&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 律动 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;拍弦&lt;/li&gt;
  &lt;li&gt;闷音&lt;/li&gt;
  &lt;li&gt;推弦&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 和弦走向 &quot; /&gt;

&lt;p&gt;基本是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Am G F Am&lt;/code&gt; 的形式. 在中间会添加上 4度 或者 5度&lt;/p&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR
    subgraph SECTION C
    Am--&amp;gt;G--&amp;gt;F--&amp;gt;G1(G)--&amp;gt;Am1(Am)
    Am2(Am)--&amp;gt;G2([G])--&amp;gt;F2([F])--&amp;gt;G2-1([G,D])--&amp;gt;C2([C])--&amp;gt;E
    end
&lt;/div&gt;

&lt;script src=&quot;assets/js/mermaid.min.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR
    subgraph SECTION D
    Am(Am)--&amp;gt;E7--&amp;gt;G--&amp;gt;D--&amp;gt;F--&amp;gt;G1(G)--&amp;gt;C--&amp;gt;E7-1(E7)
    end
&lt;/div&gt;

&lt;hr data-content=&quot; 难点 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;拍扫弦的音量控制&lt;/li&gt;
  &lt;li&gt;节奏的稳定&lt;/li&gt;
  &lt;li&gt;延音的处理&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 需要加强的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;三连音节奏不是很准&lt;/li&gt;
  &lt;li&gt;最后几个音没有弹奏响(太遗憾了。。。)&lt;/li&gt;
  &lt;li&gt;一些根音不是很连续，一些使用闷音，一些使用的延音&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 做的不错的 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;整体比较连贯, 比较干净&lt;/li&gt;
  &lt;li&gt;弹奏的时候相对放松（跟之前比起来) 尽量地多看看镜头&lt;/li&gt;
  &lt;li&gt;反复听自己的录音, 并找到自己不足的点(比如在某一些点的音量过高或者过低)&lt;/li&gt;
  &lt;li&gt;在练习的时候开着节拍器, 在录音的时候开着耳返&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry></feed>